@model IEnumerable<BeerRoute.Models.Visita>

@{
    ViewData["Title"] = "Marcando uma Visita";
    var apiKey = ViewBag.ApiKey;
    var userLat = -30.03488;
    var userLng = -51.22647;
    var beerIconUrl = Url.Content("~/images/lupuloicon.svg"); // Caminho para o ícone lúpulo em formato SVG
}

<h1>Marcando uma Visita</h1>

<p>
    <a class="btn btn-success mb-3" asp-action="Create">Criar Novo</a>
</p>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Usuário</th>
                <th>Cervejarias</th>
                <th>Data da Visita</th>
                <th>Créditos Gastos</th>
                <th>Avaliação</th>
                <th>Comentário</th>
                <th>Ações</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Usuario.Nome</td>
                    <td>
                        @foreach (var cervejaria in item.VisitaCervejarias)
                        {
                            <p>@cervejaria.Cervejaria.Nome</p>
                        }
                    </td>
                    <td>@item.DataVisita</td>
                    <td>@item.CreditosUtilizados</td>
                    <td>@item.Avaliacao</td>
                    <td>@item.Comentario</td>
                    <td>
                        <a class="btn btn-primary btn-sm mb-1" asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                        <a class="btn btn-info btn-sm mb-1" asp-action="Details" asp-route-id="@item.Id">Detalhes</a>
                        <a class="btn btn-danger btn-sm mb-1" asp-action="Delete" asp-route-id="@item.Id">Excluir</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div id="map" style="height: 500px; width: 100%; margin-top: 20px;"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=@apiKey&callback=initMap" async defer></script>
<script>
    var map;
    var directionsService;
    var directionsRenderer;
    var beerIconUrl = '@beerIconUrl';

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: @userLat, lng: @userLng },
            zoom: 15
        });
        directionsService = new google.maps.DirectionsService();
        directionsRenderer = new google.maps.DirectionsRenderer({
            suppressMarkers: true // Suprime os marcadores padrão
        });
        directionsRenderer.setMap(map);
        calculateAndDisplayRoute();
    }

    function calculateAndDisplayRoute() {
        var waypoints = [];
        var markers = [];
        var infoWindows = [];
        var order = 1;

    @foreach (var item in Model)
    {
        @foreach (var cervejaria in item.VisitaCervejarias)
        {
            <text>
                            waypoints.push({
                                location: new google.maps.LatLng(@cervejaria.Cervejaria.Latitude, @cervejaria.Cervejaria.Longitude),
                                stopover: true
                            });

                            var marker = new google.maps.Marker({
                                position: { lat: @cervejaria.Cervejaria.Latitude, lng: @cervejaria.Cervejaria.Longitude },
                                map: map,
                                title: '@cervejaria.Cervejaria.Nome' + ' - ' + '@cervejaria.Cervejaria.Endereco',
                                icon: {
                                    url: beerIconUrl,
                                    scaledSize: new google.maps.Size(48, 48), // Ajuste o tamanho do ícone aqui
                                    labelOrigin: new google.maps.Point(24, -10) // Ajuste a posição do rótulo aqui
                                },
                                label: {
                                    text: order.toString(),
                                    color: 'red',
                                    fontSize: '16px',
                                    fontWeight: 'bold'
                                }
                            });

                            var infoWindow = new google.maps.InfoWindow({
                                content: '<div><strong>@cervejaria.Cervejaria.Nome</strong></div>'
                            });

                            google.maps.event.addListener(marker, 'click', (function(marker, infoWindow) {
                                return function() {
                                    infoWindows.forEach(function(iw) { iw.close(); });
                                    infoWindow.open(map, marker);
                                };
                            })(marker, infoWindow));

                            markers.push(marker);
                            infoWindows.push(infoWindow);
                            order++;
            </text>
        }
    }

        if (waypoints.length < 1) {
            return;
        }

        var start = { lat: @userLat, lng: @userLng };
        var end = waypoints.pop().location;
        var travelMode = '@Model.FirstOrDefault()?.ModoViagem' || 'DRIVING'; // Default to DRIVING if not set

        // Adiciona o marcador para o ponto de partida
        var startMarker = new google.maps.Marker({
            position: start,
            map: map,
            title: 'Ponto de Partida'
        });

        var startInfoWindow = new google.maps.InfoWindow({
            content: '<div><strong>@Model.FirstOrDefault()?.Usuario.Nome</strong></div>'
        });

        startMarker.addListener('click', function() {
            infoWindows.forEach(function(iw) { iw.close(); });
            startInfoWindow.open(map, startMarker);
        });

        infoWindows.push(startInfoWindow);

        directionsService.route(
            {
                origin: start,
                destination: end,
                waypoints: waypoints,
                optimizeWaypoints: true, // Otimiza a ordem dos waypoints
                travelMode: google.maps.TravelMode[travelMode]
            },
            function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            }
        );
    }
</script>