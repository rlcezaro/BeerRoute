@model IEnumerable<BeerRoute.Models.Cervejaria>

@{
    ViewData["Title"] = "Cadastro de Cervejarias";
}

<h1>Cadastro de Cervejarias</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Criar Nova Cervejaria</a>
    <a asp-action="List" class="btn btn-secondary">Listar Cervejarias</a>
</p>

<div id="map" style="height: 500px; width: 100%; margin-top: 20px;"></div>

@section Scripts {
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFaoOy_dtwHglwcp9TrJgAP62TAsV5Fys&callback=initMap" async defer></script>
        <script>
            var map;
            var markers = [];

            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 15,
                    center: { lat: -30.0333, lng: -51.2280 } // Centro das Cervejarias
                });

                loadCervejarias();
            }

            function loadCervejarias() {
                // Remove todos os marcadores existentes
                markers.forEach(function (marker) {
                    marker.setMap(null);
                });
                markers = [];

                var cervejarias = @Html.Raw(Json.Serialize(Model.Select(c => new { c.Nome, Latitude = c.Latitude.ToString(), Longitude = c.Longitude.ToString() })));
                console.log(cervejarias); // Log para verificar o JSON

                cervejarias.forEach(function (cervejaria) {
                    var lat = parseFloat(cervejaria.Latitude);
                    var lng = parseFloat(cervejaria.Longitude);

                    if (!isNaN(lat) && !isNaN(lng) && lat >= -90 && lat <= 90 && lng >= -180 && lng <= 180) {
                        var marker = new google.maps.Marker({
                            position: { lat: lat, lng: lng },
                            map: map,
                            title: cervejaria.Nome
                        });
                        markers.push(marker);
                        console.log('Marker added: ', cervejaria); // Log para verificar cada marcador
                    } else {
                        console.error('Invalid coordinates for: ', cervejaria);
                    }
                });
            }
        </script>
}
